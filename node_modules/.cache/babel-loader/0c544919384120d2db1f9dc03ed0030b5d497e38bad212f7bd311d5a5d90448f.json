{"ast":null,"code":"var _jsxFileName = \"C:\\\\Test_Task\\\\test-react-app\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { Container, Tab, Tabs, TextField } from '@material-ui/core';\nimport UserTable from './src/components/UserTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('ws://localhost:3050');\nconst App = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [limit, setLimit] = useState(10);\n  useEffect(() => {\n    socket.on('data', data => {\n      // Handle incoming data\n      handleIncomingData(data);\n    });\n\n    // Cleanup the socket connection on unmount\n    return () => socket.disconnect();\n  }, []);\n  const handleIncomingData = data => {\n    var _users;\n    // Check if the incoming data should be added to the list\n    if (users.length < limit || data.score > ((_users = users[users.length - 1]) === null || _users === void 0 ? void 0 : _users.score)) {\n      // Update the state with the new data\n      setUsers(prevUsers => {\n        const updatedUsers = [...prevUsers, data].sort((a, b) => b.score - a.score);\n        return updatedUsers.slice(0, limit); // Keep only the top 'limit' users\n      });\n    }\n  };\n  const handleDelete = userId => {\n    // Remove the user with the specified ID\n    const updatedUsers = users.filter(user => user.id !== userId);\n    setUsers(updatedUsers);\n  };\n  const handleLimitChange = event => {\n    // Update the limit when the input value changes\n    const newLimit = parseInt(event.target.value, 10);\n    setLimit(newLimit);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: 0,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Settings\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Results Limit\",\n          type: \"number\",\n          value: limit,\n          onChange: handleLimitChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"tabpanel\",\n      hidden: 0 !== 0,\n      children: /*#__PURE__*/_jsxDEV(UserTable, {\n        users: users,\n        onDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WMGCzBoE7TKtg3ZQlxdsgtmbizE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","Container","Tab","Tabs","TextField","UserTable","jsxDEV","_jsxDEV","socket","App","_s","users","setUsers","limit","setLimit","on","data","handleIncomingData","disconnect","_users","length","score","prevUsers","updatedUsers","sort","a","b","slice","handleDelete","userId","filter","user","id","handleLimitChange","event","newLimit","parseInt","target","value","children","label","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","role","hidden","onDelete","_c","$RefreshReg$"],"sources":["C:/Test_Task/test-react-app/src/app.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { Container, Tab, Tabs, TextField } from '@material-ui/core';\r\nimport UserTable from './src/components/UserTable';\r\n\r\nconst socket = io('ws://localhost:3050');\r\n\r\nconst App = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n\r\n  useEffect(() => {\r\n    socket.on('data', (data) => {\r\n      // Handle incoming data\r\n      handleIncomingData(data);\r\n    });\r\n\r\n    // Cleanup the socket connection on unmount\r\n    return () => socket.disconnect();\r\n  }, []);\r\n\r\n  const handleIncomingData = (data) => {\r\n    // Check if the incoming data should be added to the list\r\n    if (users.length < limit || data.score > users[users.length - 1]?.score) {\r\n      // Update the state with the new data\r\n      setUsers((prevUsers) => {\r\n        const updatedUsers = [...prevUsers, data].sort((a, b) => b.score - a.score);\r\n        return updatedUsers.slice(0, limit); // Keep only the top 'limit' users\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (userId) => {\r\n    // Remove the user with the specified ID\r\n    const updatedUsers = users.filter((user) => user.id !== userId);\r\n    setUsers(updatedUsers);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    // Update the limit when the input value changes\r\n    const newLimit = parseInt(event.target.value, 10);\r\n    setLimit(newLimit);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Tabs value={0}>\r\n        <Tab label=\"Table\" />\r\n        <Tab label=\"Settings\">\r\n          <TextField\r\n            label=\"Results Limit\"\r\n            type=\"number\"\r\n            value={limit}\r\n            onChange={handleLimitChange}\r\n          />\r\n        </Tab>\r\n      </Tabs>\r\n      <div role=\"tabpanel\" hidden={0 !== 0}>\r\n        <UserTable users={users} onDelete={handleDelete} />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,SAASC,SAAS,EAAEC,GAAG,EAAEC,IAAI,EAAEC,SAAS,QAAQ,mBAAmB;AACnE,OAAOC,SAAS,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGR,EAAE,CAAC,qBAAqB,CAAC;AAExC,MAAMS,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdS,MAAM,CAACO,EAAE,CAAC,MAAM,EAAGC,IAAI,IAAK;MAC1B;MACAC,kBAAkB,CAACD,IAAI,CAAC;IAC1B,CAAC,CAAC;;IAEF;IACA,OAAO,MAAMR,MAAM,CAACU,UAAU,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,kBAAkB,GAAID,IAAI,IAAK;IAAA,IAAAG,MAAA;IACnC;IACA,IAAIR,KAAK,CAACS,MAAM,GAAGP,KAAK,IAAIG,IAAI,CAACK,KAAK,KAAAF,MAAA,GAAGR,KAAK,CAACA,KAAK,CAACS,MAAM,GAAG,CAAC,CAAC,cAAAD,MAAA,uBAAvBA,MAAA,CAAyBE,KAAK,GAAE;MACvE;MACAT,QAAQ,CAAEU,SAAS,IAAK;QACtB,MAAMC,YAAY,GAAG,CAAC,GAAGD,SAAS,EAAEN,IAAI,CAAC,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACL,KAAK,GAAGI,CAAC,CAACJ,KAAK,CAAC;QAC3E,OAAOE,YAAY,CAACI,KAAK,CAAC,CAAC,EAAEd,KAAK,CAAC,CAAC,CAAC;MACvC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMe,YAAY,GAAIC,MAAM,IAAK;IAC/B;IACA,MAAMN,YAAY,GAAGZ,KAAK,CAACmB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKH,MAAM,CAAC;IAC/DjB,QAAQ,CAACW,YAAY,CAAC;EACxB,CAAC;EAED,MAAMU,iBAAiB,GAAIC,KAAK,IAAK;IACnC;IACA,MAAMC,QAAQ,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC;IACjDxB,QAAQ,CAACqB,QAAQ,CAAC;EACpB,CAAC;EAED,oBACE5B,OAAA,CAACN,SAAS;IAAAsC,QAAA,gBACRhC,OAAA,CAACJ,IAAI;MAACmC,KAAK,EAAE,CAAE;MAAAC,QAAA,gBACbhC,OAAA,CAACL,GAAG;QAACsC,KAAK,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrBrC,OAAA,CAACL,GAAG;QAACsC,KAAK,EAAC,UAAU;QAAAD,QAAA,eACnBhC,OAAA,CAACH,SAAS;UACRoC,KAAK,EAAC,eAAe;UACrBK,IAAI,EAAC,QAAQ;UACbP,KAAK,EAAEzB,KAAM;UACbiC,QAAQ,EAAEb;QAAkB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACPrC,OAAA;MAAKwC,IAAI,EAAC,UAAU;MAACC,MAAM,EAAE,CAAC,KAAK,CAAE;MAAAT,QAAA,eACnChC,OAAA,CAACF,SAAS;QAACM,KAAK,EAAEA,KAAM;QAACsC,QAAQ,EAAErB;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAClC,EAAA,CAvDID,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAyDT,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}